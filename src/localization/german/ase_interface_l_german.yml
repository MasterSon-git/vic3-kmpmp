l_german:
 ASE_STOCKPILE_WORD:0 "Warenlager"
 ASE_INPUT_WORD:0 "Eingang"
 ASE_OUTPUT_WORD:0 "Ausgang"
 ASE_SAVING_WORD:0 "Einkauf"
 ASE_SPENDING_WORD:0 "Verkauf"

 concept_ase_mod_description:0 "Anbeeld's Stockpile Economy"
 concept_ase_mod_description_desc:0 "Anbeeld's Stockpile Economy is a mod that makes it possible to [Concept('concept_ase_market_stockpile', 'Stockpile')] all types of [Concept('concept_good', 'Goods')], both for players and for AI."

 concept_ase_market_stockpile:0 "Markt Warenlager"
 concept_ase_market_stockpile_desc:0 "Das #bold Lagern#! von [concept_goods] bedeuted eine [Concept('concept_ase_stockpile_reserve', 'Reserve')] davon anzulegen, diese [concept_goods] werden vom Staat automatisch auf dem [concept_market] [Concept('concept_ase_stockpile_transfer', 'eingekauft')] wenn der [concept_market_price] unterhalb des [concept_ase_stockpile_price_target] liegt.\n\nWenn der [concept_market_price] über dem [concept_ase_stockpile_price_target] liegt, werden die #bold Lager#! automatisch [concept_goods] an den [concept_market] verkaufen bis der [concept_ase_stockpile_price_target] erreicht ist. Was bedeuted, dass durch den [Concept('concept_ase_stockpile_transfer', 'Verkauf')] der [concept_market_price] nicht höher steigen wird.\n\n#bold Lager#! werden auf [Concept('concept_state', 'Staats')]-Basis verwaltet. Wenn ein [concept_country] einen [Concept('concept_state', 'Staat')] verliert, so verliert es dort auch das gesamte #bold Lager#!.\n\nIn [Concept('concept_markets', 'Märkten')] mit mehreren Mitgliedern werden die Lager von jedem [concept_country] mit den anderen geteilt, wobei die [concept_ase_stockpile_policy] vom [concept_market_owner] gesteuert wird. Mitgleider können nur dem #bold Lagern#! von [concept_goods] auf Grundlage der Bedingugnen die vom [concept_market_owner] festgelegt sind zustimmen oder diese ablehnen."
 
 concept_ase_country_stockpile:0 "Landes Warenlager"
 concept_ase_country_stockpile_desc:0 "Die Menge von [concept_goods] welche in deinem [concept_country] [Concept('concept_ase_market_stockpile', 'gelagert')] sind im Vergleich zu dem gesamten [concept_ase_market_stockpile]. Markt-[concept_junior_partner] haben eine begrenzte [concept_ase_stockpile_capacity] auf dem [concept_market] diese wird durch [concept_market_share] des [concept_country] bestimmt.\n\nVerlassen des [Concept('concept_market', 'Markts')] bedeuted den Zugang zu dem geteilten [concept_ase_market_stockpile] zu verlieren, allerdings bleiben die #bold Landes Warenlager#! unabhängig davon erhalten."

 concept_ase_state_stockpile:0 "Staats Warenlager"
 concept_ase_state_stockpile_desc:0 "Die Menge von [concept_goods] welche in einem bestimmten [concept_state] [Concept('concept_ase_market_stockpile', 'gelagert')] sind im Vergleich zu dem gesamten [concept_ase_country_stockpile].\n\nDen [concept_state] zu verlieren bedeuted das man den Zugang zu dem #bold Staats Warenlager#! verliert."
 
 concept_ase_stockpile_transfer:0 "Warenlager Transfer"
 concept_ase_stockpile_transfer_desc:0 "Eine Änderung in der [concept_ase_stockpile_reserve], entweder #bold äuffüllen#! was bedeuted [concept_goods] zu kaufen um das [Concept('concept_ase_market_stockpile', 'Lager')] zu füllen, oder #bold leeren#! was bedeutet [concept_goods] auf dem [concept_market] zu verkaufen um den [concept_market_price] zu kontollieren.\n\nIn [Concept('concept_market', 'Märkten')] mit mehreren Mitgliedern werden #bold Einkäufe#! durch alle [Concept('concept_country', 'Länder')] in dem [concept_market] basierend auf ihrem [concept_market_share] aufgeteilt, während bei #bold Verkäufe#! proportional zum [concept_ase_country_stockpile] aufgeteilt werden."
 
 concept_ase_stockpile_reserve:0 "Warenlager Reserve"
 concept_ase_stockpile_reserve_desc:0 "Die Menge an eingelagerten [concept_goods] in einem [Concept('concept_ase_market_stockpile', 'Warenlager')] des [Concept('concept_market', 'Markts')], eines [Concept('concept_country', 'Landes')] oder eines [concept_state], diese können immer verwendet werden um zu verhindern, dass die [concept_market_prices] zu hoch steigen wenn die Nachfrage das Angebot übersteigt.\n\n#bold Reserven#! können nicht größer als #bold 200%#! der maximal verfügbaren [concept_ase_stockpile_capacity] sein, der Überschuss jeder [concept_good] wird nach einiger Zeit verloren sein."
 
 concept_ase_stockpile_policy:0 "Lager Richtlinien"
 concept_ase_stockpile_policy_desc:0 "Ein Kombination verschieder [Concept('concept_ase_market_stockpile', 'Warenlager')] Richtlinien: erlaubt [Concept('concept_ase_stockpile_transfer', 'Transfers')], maximale [Concept('concept_ase_stockpile_capacity', 'Capacity')], [Concept('concept_ase_stockpile_price_target', 'Preiziele')], [concept_state] Lager Prioritäten usw."
 
 concept_ase_stockpile_capacity:0 "Lagerkapazität"
 concept_ase_stockpile_capacity_desc:0 "Die [Concept('concept_ase_stockpile_reserve', 'Reserve')] von [concept_goods] die in einem [Concept('concept_ase_market_stockpile', 'Lager')] des [concept_country] eingelagert werden können. Diese basiert auf dem #bold Markt Volumen#! der [concept_good], diese ergibt sich aus #bold 25% der #![concept_sell_orders]#bold  + 75% der #![concept_buy_orders], multipliziert mit einer bestimmten Menge an #bold Monaten#! die durch den [concept_market_owner] festgelgt wurde.\n\nWenn die #bold Kapazität#! auf #bold 6 Monate#! eingestellt wurde, lagert das [concept_ase_market_stockpile] die Menge an [concept_goods] die auf dem [concept_market] innerhalb von #bold 6 Monaten#! verbraucht werden.\n\nDas bedeutet, dass die #bold Lagerkapazität#! nicht nur ein willkürlicher Wert ist, sondern vielmehr ein Hinweis darauf, wie wichtig die [concept_goods] für den [concept_market] sind."
 
 concept_ase_stockpile_price_target:0 "Lager Preisziel"
 concept_ase_stockpile_price_target_desc:0 "Der [concept_market_price] den das [concept_ase_market_stockpile] versucht zu halten wenn ein [Concept('concept_ase_stockpile_transfer', 'Transfer')] stattfindet.\n\n[Concept('concept_ase_stockpile_transfer', 'Einkauf')] beginnt wenn der [Concept('concept_market_price', 'Preis')] unter das #bold Einkaufspreisziel#! fällt, [Concept('concept_ase_stockpile_transfer', 'Verkauf')] beginnt wenn der [Concept('concept_market_price', 'Preis')] über das #bold Verkaufspreisziel#! steigt. In beiden Fällen versucht das [Concept('concept_ase_market_stockpile', 'Lager')] die benötigte Menge an [concept_goods] zu kaufen oder zu verkaufen damit der [Concept('concept_market_price', 'Preis')] das #bold Preisziel#! erreicht."

 ASE_STOCKPILE_EXISTING_RESERVE:0 "[Concept('concept_ase_market_stockpile', 'Lager')] in [Goods.GetMarket.GetName] beinhaltet [Multiply_CFixedPoint(GuiScope.SetRoot(Goods.GetMarket.GetOwner.MakeScope).ScriptValue(Concatenate('ase_stockpile_market_reserve_', Goods.GetKey)), '(CFixedPoint)10')|Dv] [Goods.GetName]"
 ASE_STOCKPILE_ONGOING_TRANSFER_SAVING:0 "$ASE_STOCKPILE_EXISTING_RESERVE$\nAktueller [Concept('concept_ase_stockpile_transfer', 'Transfer')] entpricht [Multiply_CFixedPoint(GuiScope.SetRoot(Goods.GetMarket.GetOwner.MakeScope).ScriptValue(Concatenate('ase_stockpile_market_transfer_', Goods.GetKey)), '(CFixedPoint)0.1')|=+D] pro Woche"
 ASE_STOCKPILE_ONGOING_TRANSFER_SPENDING:0 "$ASE_STOCKPILE_EXISTING_RESERVE$\Aktueller [Concept('concept_ase_stockpile_transfer', 'Transfer')] entspricht [Multiply_CFixedPoint(GuiScope.SetRoot(Goods.GetMarket.GetOwner.MakeScope).ScriptValue(Concatenate('ase_stockpile_market_transfer_', Goods.GetKey)), '(CFixedPoint)0.1')|=+D] pro Woche"
 ASE_STOCKPILE_NO_ONGOING_TRANSFER:0 "$ASE_STOCKPILE_EXISTING_RESERVE$\nAktuell findet kein [Concept('concept_ase_stockpile_transfer', 'Transfer')] statt"

 ASE_MARKET_STOCKPILE:0 "[concept_ase_market_stockpile]"
 ASE_COUNTRY_STOCKPILE:0 "[concept_ase_country_stockpile]"
 ASE_STATE_STOCKPILE:0 "[concept_ase_state_stockpile]"

 ASE_STOCKPILE_STATES_IN_MARKET:0 "[Concept('concept_state', 'States')] in [Goods.GetMarket.GetName] with the [Concept('concept_ase_market_stockpile', 'Stockpile')] of [Goods.GetName]"
 ASE_STOCKPILE_SHOW_STATES_IN_COUNTRY:0 "#bold #underline Show states in our country only#!#!"
 ASE_STOCKPILE_STATES_IN_COUNTRY:0 "[Concept('concept_state', 'States')] in [GetPlayer.GetName] with the [Concept('concept_ase_market_stockpile', 'Stockpile')] of [Goods.GetName]"
 ASE_STOCKPILE_COUNTRIES_IN_MARKET:0 "[Concept('concept_country', 'Countries')] in [Goods.GetMarket.GetName] with the [Concept('concept_ase_market_stockpile', 'Stockpile')] of [Goods.GetName]"

 ASE_STOCKPILE_SECTION_GOODS_POLICY:0 "[Concept('concept_ase_stockpile_policy', 'Stockpiling of')] [Goods.GetName]"
 ASE_STOCKPILE_SECTION_DEFAULT_POLICY:0 "[Concept('concept_ase_stockpile_policy', 'Default Stockpile Policy')]"
 ASE_STOCKPILE_SECTION_STATE_POLICY:0 "[Concept('concept_ase_stockpile_policy', 'Stockpiling in')] [GoodsStatePanel.GetGoods.GetState.GetName]"

 ASE_STOCKPILE_TRANSFERS:0 "[Concept('concept_ase_stockpile_transfer', 'Transfers')]"
 ASE_STOCKPILE_TRANSFERS_BOTH:0 "Set [Concept('concept_ase_stockpile_transfer', 'Stockpile Transfers')] to [Concept('concept_ase_stockpile_transfer', 'Saving and Spending')]"
 ASE_STOCKPILE_TRANSFERS_SAVING:0 "Set [Concept('concept_ase_stockpile_transfer', 'Stockpile Transfers')] to only [Concept('concept_ase_stockpile_transfer', 'Saving')]"
 ASE_STOCKPILE_TRANSFERS_SPENDING:0 "Set [Concept('concept_ase_stockpile_transfer', 'Stockpile Transfers')] to only [Concept('concept_ase_stockpile_transfer', 'Spending')]"
 ASE_STOCKPILE_TRANSFERS_NONE:0 "Set [Concept('concept_ase_stockpile_transfer', 'Stockpile Transfers')] to [Concept('concept_ase_stockpile_transfer', 'None')]"
 ASE_STOCKPILE_TRANSFERS_BOTH_TOOLTIP:0 "Allow to both [Concept('concept_ase_stockpile_transfer', 'Save and Spend')] [Goods.GetName] in the [Concept('concept_ase_market_stockpile', 'Stockpile')] of [GetPlayer.GetName]"
 ASE_STOCKPILE_TRANSFERS_SAVING_TOOLTIP:0 "Allow to only [Concept('concept_ase_stockpile_transfer', 'Save')] [Goods.GetName] in the [Concept('concept_ase_market_stockpile', 'Stockpile')] of [GetPlayer.GetName]"
 ASE_STOCKPILE_TRANSFERS_SPENDING_TOOLTIP:0 "Allow to only [Concept('concept_ase_stockpile_transfer', 'Spend')] [Goods.GetName] in the [Concept('concept_ase_market_stockpile', 'Stockpile')] of [GetPlayer.GetName]"
 ASE_STOCKPILE_TRANSFERS_NONE_TOOLTIP:0 "Prohibit to [Concept('concept_ase_stockpile_transfer', 'Save and Spend')] [Goods.GetName] in the [Concept('concept_ase_market_stockpile', 'Stockpile')] of [GetPlayer.GetName]"

 ASE_STOCKPILE_NOT_OWNER:0 "@red_cross! [concept_ase_market_stockpile] in the [Goods.GetMarket.GetName] is managed by [Goods.GetMarket.GetOwner.GetName].\n\nAs a [Concept('concept_junior_partner', 'Junior Market Partner')], you are limited to choosing if you agree to [Concept('concept_ase_stockpile_transfer', 'Transfer')] [Goods.GetName] on these terms or not by adjusting your [Concept('concept_ase_stockpile_transfer', 'Stockpile Transfers')]."

 ASE_STOCKPILE_CAPACITY:0 "[Concept('concept_ase_stockpile_capacity', 'Capacity')]"
 ASE_STOCKPILE_CAPACITY_MONTHS:0 " months"
 ASE_STOCKPILE_CAPACITY_LOWEST:0 "@red_cross! [concept_ase_stockpile_capacity] can't be any lower"
 ASE_STOCKPILE_CAPACITY_LOWER:0 "Decrease [concept_ase_stockpile_capacity] by #variable 3 months#!"
 ASE_STOCKPILE_CAPACITY_HIGHEST:0 "@red_cross! [concept_ase_stockpile_capacity] can't be any higher"
 ASE_STOCKPILE_CAPACITY_HIGHER:0 "Increase [concept_ase_stockpile_capacity] by #variable 3 months#!"

 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SAVING:0 "[Concept('concept_ase_stockpile_price_target', 'Saving Target')]"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SAVING_LOWEST:0 "@red_cross! [concept_ase_stockpile_price_target] can't be any lower"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SAVING_LOWER:0 "Decrease [concept_ase_stockpile_price_target] by #variable 5%#!"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SAVING_HIGHEST:0 "@red_cross! [concept_ase_stockpile_price_target] can't be any higher"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SAVING_HIGHER:0 "Increase [concept_ase_stockpile_price_target] by #variable 5%#!"

 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SPENDING:0 "[Concept('concept_ase_stockpile_price_target', 'Spending Target')]"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SPENDING_LOWEST:0 "@red_cross! [concept_ase_stockpile_price_target] can't be any lower"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SPENDING_LOWER:0 "Decrease [concept_ase_stockpile_price_target] by #variable 5%#!"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SPENDING_HIGHEST:0 "@red_cross! [concept_ase_stockpile_price_target] can't be any higher"
 ASE_STOCKPILE_COUNTRY_PRICE_TARGET_SPENDING_HIGHER:0 "Increase [concept_ase_stockpile_price_target] by #variable 5%#!"

 ASE_STOCKPILE_NONE:0 "#variable None#!"
 ASE_STOCKPILE_NONE_TOOLTIP:0 "@red_cross! [Goods.GetMarket.GetOwner.GetName], owner of [Goods.GetMarket.GetName], decided against [Concept('concept_ase_market_stockpile', 'Stockpiling')] of [Goods.GetName] under any conditions"

 ASE_STOCKPILE_RESET_SPECIFIC:0 "Reset @[Goods.GetKey]! only"
 ASE_STOCKPILE_RESET_SPECIFIC_TOOLTIP:0 "Reset this setting for [Goods.GetName] to #bold Default#! value"
 ASE_STOCKPILE_RESET_ALL_GOODS:0 "Reset all goods"
 ASE_STOCKPILE_RESET_ALL_GOODS_TOOLTIP:0 "Reset this setting for all [Concept('concept_good', 'Goods')] that have it changed to #bold Default#! value"
 ASE_STOCKPILE_RESET_CONFIRM:0 "#r #bold Are you sure?#!#!"
 ASE_STOCKPILE_RESET_STATE_SPECIFIC_TOOLTIP:0 "Reset all settings for [Goods.GetName] in [GoodsStatePanel.GetGoods.GetState.GetName] to #bold Default#! values"
 ASE_STOCKPILE_RESET_STATE_ALL_GOODS_TOOLTIP:0 "Reset all settings for all [Concept('concept_good', 'Goods')] that have them changed in [GoodsStatePanel.GetGoods.GetState.GetName] to #bold Default#! values"

 ASE_STOCKPILE_ONLY_FOR_SPECIFIC:0 "#gold Only for#! @[Goods.GetKey]!"
 ASE_STOCKPILE_ONLY_FOR_SPECIFIC_TOOLTIP:0 "Affects only [Concept('concept_ase_market_stockpile', 'Stockpiling')] of [Goods.GetName] in [GoodsStatePanel.GetGoods.GetState.GetName]"
 ASE_STOCKPILE_FOR_ALL_GOODS:0 "#gold Default#!"
 ASE_STOCKPILE_FOR_ALL_GOODS_TOOLTIP:0 "Affects [Concept('concept_ase_market_stockpile', 'Stockpiling')] of all [Concept('concept_good', 'Goods')] in [GoodsStatePanel.GetGoods.GetState.GetName]"

 ASE_STOCKPILE_PRIORITY:0 "Priority"
 ASE_STOCKPILE_PRIORITY_TOOLTIP:0 "Prioritize [GoodsStatePanel.GetGoods.GetState.GetName] for [Concept('concept_ase_stockpile_transfer', 'Saving Transfers')] of [Goods.GetName], increasing the share of [Concept('concept_good', 'Goods')] it gets compared to other [Concept('concept_state', 'States')].\n\nIf #bold Stockpiling States#! game rule is below #bold 100%#!, this [concept_state] will also be considered for [Concept('concept_ase_stockpile_transfer', 'Saving Transfers')] before others regardless of its GDP share.\n\n[concept_capital_state] is prioritized by default."
 
 ase_remove_everything_related_to_stockpiling:0 "[Concept('concept_ase_mod_description', 'ASE')] | Remove everything related to stockpiling"
 ase_remove_everything_related_to_stockpiling_desc:0 "Taking this decision is required if you want to remove ASE from this playthrough, otherwise you'll encounter various problems. You'll need to exit the game and disable the mod right after that."