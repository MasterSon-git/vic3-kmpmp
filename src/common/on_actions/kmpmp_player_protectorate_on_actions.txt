# Root = Country
on_monthly_pulse_country = {
    on_actions = {
        kmpmp_player_protectorate_own_market
    }
}

# player protectorates should have their own market, unless power_bloc principle market unification is picked
kmpmp_player_protectorate_own_market = {
    effect = {
        if = {
            limit = { # if triggers are changed, check diplomatic_actions grant_own_market actor_can_break trigger
                has_game_rule = kmpmp_player_protectorate_own_market_force
                OR = {
                    is_in_power_bloc = no

                    power_bloc ?= {
                        NOT = {
                            has_principle = principle:principle_market_unification_3
                        }
                    }
                }
            }

            every_scope_diplomatic_pact = {
                limit = {
                    is_diplomatic_action_type = protectorate
                    first_country = ROOT
                    second_country = {
                        is_player = yes
                    }
    
                    NOT = {
                        first_country = {
                            has_diplomatic_pact = {
                                who = PREV.second_country
                                type = grant_own_market 
                            }
                        }
                    }
                }
    
                first_country = {
                    create_diplomatic_pact = {
                        country = PREV.second_country
                        type = grant_own_market
                    }
                }
            }
        }
    }
}

# Root = Diplomatic Play
on_diplo_play_war_start = {
	on_actions = {
        # disabled since it's not working
		# kmpmp_add_je_subject_demobilization
	}
}

kmpmp_add_je_subject_demobilization = {
    effect = {
        every_scope_play_involved = {
            limit = {
                is_player = yes

                OR = {
                    NOT = {
                        has_journal_entry = kmpmp_je_subject_demobilization
                    }
                    NOT = {
                        has_variable_list = je_subject_demobilization_list
                    }
                    NOT = {
                        # je:kmpmp_je_subject_demobilization.target = PREV
                        any_in_list = {
                            variable = je_subject_demobilization_list

                            THIS = je:kmpmp_je_subject_demobilization
                            target = ROOT
                        }
                    }
                }

                # limit to protectorate? instead of subject
                is_subject = yes
                any_overlord_or_above = {
                    is_in_war_together = PREV
                }
            }

            add_journal_entry = {
                type = kmpmp_je_subject_demobilization
                target = ROOT
            }
        }
    }
}