kmpmp_emser_depeche = {
	is_shown = {
		NOT = { has_variable = took_decision_emser_depeche }
		OR = {
			c:NGF ?= owner
			c:PRU ?= owner
		}
		NOT = { exists = c:GER }
		NOT = {
			owns_entire_state_region = STATE_ALSACE_LORRAINE
		}
	}

	possible = {
		exists = c:NGF
		c:NGF ?= this
		has_technology_researched = nationalism
		year <= 1871
		has_war_with = c:FRA
	}
	when_taken = {
		add_loyalists = {
 			value = 0.08
 			culture = cu:north_german
		}
		add_modifier = {
			name = kmpmp_retake_whats_rightfully_german
			years = 5
		}
		set_variable = took_decision_emser_depeche
	}
}

kmpmp_turn_your_eye_on_the_south = {
	is_shown = {
		NOT = { has_variable = took_decision_turn_eye_on_the_south }
		OR = {
			c:NGF ?= owner
			c:PRU ?= owner
		}
		NOT = { exists = c:GER }
		NOT = { is_unification_candidate = GER}
	}
	possible = {
		any_scope_state = {
   			state_region = s:STATE_ALSACE_LORRAINE
		}
		c:NGF ?= this
	}
	when_taken = {
		set_variable = took_decision_turn_eye_on_the_south
		if = {
			limit = {
				NOT = { owns_entire_state_region = STATE_FRANCONIA }
			}
			s:STATE_FRANCONIA = {
				add_claim = ROOT
			}
		}
		if = {
			limit = {
				NOT = { owns_entire_state_region = STATE_BAVARIA }
			}
			s:STATE_BAVARIA = {
				add_claim = ROOT
			}
		}
		if = {
			limit = {
				NOT = { owns_entire_state_region = STATE_WURTTEMBERG }
			}
			s:STATE_WURTTEMBERG = {
				add_claim = ROOT
			}
		}
		if = {
			limit = {
				NOT = { owns_entire_state_region = STATE_BADEN }
			}
			s:STATE_BADEN = {
				add_claim = ROOT
			}
		}
		if = {
			limit = {
				NOT = { owns_entire_state_region = STATE_RHINELAND }
			}
			s:STATE_RHINELAND = {
				add_claim = ROOT
			}
		}
	}
}

kmpmp_austrian_hungarian_agreement = {
	is_shown = {
		NOT = { 
			has_variable = took_decision_austrian_hungarian_agreement
		}
		c:AUS ?= owner
		year >= 1845
		NOT = {
			country_has_primary_culture = cu:hungarian
		}
	}

	possible = {
		has_technology_researched = nationalism
	}

	when_taken = {
		set_variable = took_decision_austrian_hungarian_agreement

		if = {
			limit = {
				NOT = {
					has_law = law_type:law_racial_segregation
				}
			}
			activate_law = law_type:law_racial_segregation
		}

		add_modifier = {
			name = kmpmp_austrian_the_great_reform
			years = 5
			is_decaying = yes
		}		
	}
}

kmpmp_mexico_integrate_the_mesoamericans = {
	is_shown = {
		NOT = { 
			has_variable = took_decision_mexico_integrate_the_mesoamericans
		}
		c:MEX ?= owner
	}

	possible = {
		has_technology_researched = nationalism
	}

	when_taken = {
		set_variable = took_decision_mexico_integrate_the_mesoamericans

		add_modifier = {
			name = kmpmp_integrate_mesoamericans_positive
			years = 5
		}

		add_modifier = {
			name = kmpmp_integrate_mesoamericans_negative
			years = 20
			is_decaying = yes
		}
		
		add_radicals = {
			value = 0.05
		}

		add_loyalists = {
			value = 0.05
			culture = cu:mayan
		}

		add_loyalists = {
			value = 0.05
			culture = cu:nahua
		}

		add_loyalists = {
			value = 0.05
			culture = cu:tarascan
		}

		add_primary_culture = cu:mayan
	}
}

kmpmp_integrate_the_mesoamericans = {
	is_shown = {
		NOT = { 
			has_variable = took_decision_integrate_the_mesoamericans
		}
		OR = {
			c:BOL ?= owner
			c:FND ?= owner
			c:PEU ?= owner
			c:PBC ?= owner
		}
	}

	possible = {
		has_technology_researched = nationalism
	}

	when_taken = {
		set_variable = took_decision_integrate_the_mesoamericans

		add_modifier = {
			name = kmpmp_integrate_mesoamericans_positive
			years = 5
		}

		add_modifier = {
			name = kmpmp_integrate_mesoamericans_negative
			years = 20
			is_decaying = yes
		}
		
		add_radicals = {
			value = 0.05
			culture = cu:south_andean
		}

		add_loyalists = {
			value = 0.05
			culture = cu:amazonian
		}

		add_loyalists = {
			value = 0.05
			culture = cu:quechua
		}

		add_loyalists = {
			value = 0.05
			culture = cu:aimara
		}

		add_primary_culture = cu:amazonian
		add_primary_culture = cu:quechua
	}
}

kmpmp_reino_unido_begin = {
	is_shown = {
		NOT = {
			has_global_variable = kmpmp_reino_unido_started
		}
		exists = c:BRZ
		exists = c:POR
		OR = {
			c:BRZ ?= ROOT
			c:POR ?= ROOT
		}
	}

	possible = {
		exists = c:BRZ
		exists = c:POR
	}

	when_taken = {
		set_global_variable = kmpmp_reino_unido_started
		c:BRZ = {
			add_journal_entry = {
				type = je_reino_unido
			}
		}
		c:POR = {
			add_journal_entry = {
				type = je_reino_unido
			}
		}

		# claims for BRZ in POR
		s:STATE_BEIRA = {
			add_claim = c:BRZ
		}
		s:STATE_ESTREMADURA = {
			add_claim = c:BRZ
		}
		s:STATE_ALENTEJO = {
			add_claim = c:BRZ
		}

		# claims for POR in BRZ
		s:STATE_MINAS_GERAIS = {
			add_claim = c:POR
		}
		s:STATE_RIO_DE_JANEIRO = {
			add_claim = c:POR
		}
		s:STATE_BAHIA = {
			add_claim = c:POR
		}
	}

	ai_chance = {
        base = 0	
    }
}