@panel_width_minus_10 = 710			# used to be 450
@panel_width = 720  				# used to be 460
@panel_width_half = 360				# used to be 230
@panel_width_plus_10 = 730  		# used to be 470
@panel_width_plus_14 = 734			# used to be 474
@panel_width_plus_14_half = 367		# used to be 237
@panel_width_plus_20 = 740			# used to be 480
@panel_width_plus_30 = 750			# used to be 490
@panel_width_plus_70 = 790			# used to be 530

types map_list_panel_types {
	### BUILD BUILDINGS
	type build_building_map_list_panel = map_list_panel {
		name = "build_building_map_list_panel"
		size = { @panel_width_plus_14 60 }
		blockoverride "headers" {

			###Sort Button
			#State
			sort_button = {
				align = center|nobaseline
				raw_text = "BUILDING_MAP_LIST_PANEL_STATE_HEADER"
				tooltip = "BUILDING_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP"
				size = { 140 20 }
				onclick = "[MapListPanel.Sort('state')]"
			}
			#Building Level
			sort_button = {
				align = center|nobaseline
				tooltip = "BUILDING_LEVEL_HEADER_TOOLTIP"
				size = { 60 20 }
				onclick = "[MapListPanel.Sort('size')]"
				button = {
					texture = "gfx/interface/buttons/sort_button_icons/sort_icon_size.dds"
					size = { 25 25 }
					parentanchor = center
					alwaystransparent = yes
				}
			}
			#Trait
			sort_button = {
				align = center|nobaseline
				tooltip = "TOOLTIP_STATE_TRAIT"
				size = { 90 20 }
				#enabled = no
				button = {
					texture = "gfx/interface/icons/state_trait_icons/good_soils.dds"
					size = { 25 25 }
					parentanchor = center
					alwaystransparent = yes
				}
			}
			#Infra
			sort_button = {
				align = center|nobaseline
				tooltip = "BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER_TOOLTIP"
				size = { 55 20 }
				onclick = "[MapListPanel.Sort('infrastructure_balance')]"
				button = {
					texture = "gfx/interface/icons/state_status_icons/state_infrastructure.dds"
					size = { 25 25 }
					parentanchor = center
					alwaystransparent = yes
				}
			}
			#Peasants
			sort_button = {
				align = center|nobaseline
                #tooltip = "BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER_TOOLTIP"
				tooltip = "[GetPopType('peasants').GetNameNoIcon]"
				size = { 50 20 }
				onclick = "[MapListPanel.Sort('peasants')]"
				button = {
					texture = "gfx/interface/icons/pops_icons/peasants.dds"
					size = { 25 25 }
					parentanchor = center
					alwaystransparent = yes
				}
			}
			#Unemployed
			sort_button = {
				align = center|nobaseline
				tooltip = "UNEMPLOYED"
				size = { 50 20 }
				button = {
					texture = "gfx/interface/icons/pops_icons/unemployed.dds"
					size = { 25 25 }
					parentanchor = center
					alwaystransparent = yes
				}
			}
			#Jobseeker
			sort_button = {
				align = center|nobaseline
				raw_text = "BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER"
				tooltip = "BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER_TOOLTIP"
				size = { 85 20 }
				onclick = "[MapListPanel.Sort('potential_labor')]"
			}
			#Tax (only Gov Building)
			sort_button = {
				align = center|nobaseline
				raw_text = "concept_tax"
				tooltip = "BUILDING_TAXATION_CAPACITY_HEADER_TOOLTIP"
				size = { 75 20 }
				onclick = "[MapListPanel.Sort('tax_capacity_balance')]"
				visible = "[ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self)]"
			}
			#Profit (todo, remove at military)
			sort_button = {
				align = center|nobaseline
				button = {
					texture = "gfx/interface/icons/topbar/income_power_icon.dds"
					size = { 25 25 }
					parentanchor = center
					alwaystransparent = yes
				}
				tooltip = "BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_TOOLTIP"
				size = { 75 20 }
				onclick = "[MapListPanel.Sort('profit_impact')]"
				visible = "[Not(ObjectsEqual(MapListBuildingPanel.GetBuildingType, GetBuildingType('building_government_administration').Self))]"
			}
			#Checkmark
			sort_button = {
				align = center|nobaseline
				tooltip = "BUILDING_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP"
				size = { 55 20 }
				onclick = "[MapListPanel.Sort('status')]"
				button = {
					texture = "gfx/interface/buttons/sort_button_icons/sort_icon_status.dds"
					size = { 25 25 }
					parentanchor = center
					alwaystransparent = yes
				}
			}
		}

		blockoverride "item" {
			item = {
				map_list_panel_item_interaction = {
					size = { 660 40 }
					
					blockoverride "name_button_visibility" {
						visible = yes
					}

					blockoverride "name_button_size" {
						size = { 140 40 }
					}

					blockoverride "name_button_properties" {

						datacontext = "[MapListOption.GetBuildingData.GetState]"

						onmousehierarchyenter = "[AccessHighlightManager.HighlightState(State.Self)]"
						onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"

						datacontext = "[MapListOption.GetBuildingData.GetBuilding]"
						onclick = "[InformationPanelBar.OpenBuildingDetailsPanel(Building.AccessSelf)]"
						enabled = "[Building.IsValid]"
						onrightclick = "[RightClickMenuManager.ShowForBuilding(Building.AccessSelf)]"
						
						tooltipwidget = {
							FancyTooltip_Building = {}
						}

						textbox = {
							visible = "[Not(And(State.IsUnincorporated, Not(State.IsIncorporating)))]"
							margin = { 10 0 }
							size = { 110 25 }
							align = left|nobaseline
							raw_text = "[State.GetNameNoFormatting]"
							parentanchor = vcenter
							elide = right
							fontsize_min = 12
						}

						textbox = {
							visible = "[And(State.IsUnincorporated, Not(State.IsIncorporating))]"
							margin = { 10 0 }
							size = { 90 25 }
							align = left|nobaseline
							raw_text = "[State.GetNameNoFormatting]"
							parentanchor = vcenter
							elide = right
							fontsize_min = 12
						}

						icon = {
							visible = "[And(State.IsUnincorporated, Not(State.IsIncorporating))]"
							parentanchor = right|vcenter
							position = { -5 0 }
							size = { 20 20 }
							texture = "gfx/interface/icons/state_status_icons/unincorporated_state.dds"
						}
					}

					blockoverride "values" {
					
						textbox = {
							datacontext = "[MapListOption.GetBuildingData.GetBuilding]"
							margin = { 5 0 }
							size = { 60 25 }
							align = right|nobaseline
							raw_text = "[Building.GetExpansionLevelDesc]"
							parentanchor = vcenter
							elide = right
							using = tooltip_above
							alpha = "[TransparentIfFalse( Or( GreaterThan_int32(Building.GetExpansionLevel, '(int32)0'), Building.HasConstructionQueued ))]"
							fontsize_min = 12
						}
						#Trait
						widget = {
							size = { 90 40 }
							align = center|nobaseline
							flowcontainer = {
								direction = horizontal
								parentanchor = vcenter
								datacontext = "[MapListOption.GetBuildingData.GetState.GetStateRegion]"
								datamodel = "[StateRegion.AccessTraits]"
								item = {
									icon = {
										size = { 25 25 }
										tooltip = TOOLTIP_STATE_TRAIT
										onmousehierarchyenter = "[AccessHighlightManager.HighlightStateTrait(StateTrait.Self)]"
										onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
										alwaystransparent = no
										texture = "[StateTrait.GetTexture]"
									}
								}
							}
						}
						#Infra
						textbox = {
							margin = { 5 0 }
							margin_right = 7
							size = { 55 25 }
							align = right|nobaseline
							datacontext = "[MapListOption.GetBuildingData.GetState]"
							raw_text = "[State.GetInfrastructureBalance|0+=]"
							tooltip = "STATE_INFRASTRUCTURE_DESC"
							parentanchor = vcenter
							elide = right
						}
						#Peasants
						textbox = {
							margin = { 2 0 }
							size = { 50 25 }
							align = right|nobaseline
							raw_text = "[MapListOption.GetBuildingData.GetState.GetNumSubsistenceWorkingAdults|D]"
							parentanchor = vcenter
							elide = right
							fontsize_min = 10
						}
						#Unemployed
						textbox = {
							margin = { 2 0 }
							size = { 50 25 }
							align = right|nobaseline
							raw_text = "[MapListOption.GetBuildingData.GetState.GetNumUnemployedWorkingAdults|Do]"
							parentanchor = vcenter
							elide = right
							fontsize_min = 10
						}
						#Jobseeker
						textbox = {
							datacontext = "[MapListOption.GetBuildingData.GetState]"
							margin = { 5 0 }
							size = { 85 25 }
							align = right|nobaseline
							raw_text = "MAP_LIST_STATE_AVAILABLE_LABOR"
							parentanchor = vcenter
							elide = right
							tooltip = "STATE_AVAILABLE_LABOR_TOOLTIP"
						}
						# Government Administration
						textbox = {
							margin = { 5 0 }
							margin_right = 10
							size = { 75 25 }
							align = right|nobaseline
							datacontext = "[MapListOption.GetBuildingData.GetBuilding]"
							datacontext = "[Building.GetState]"
							raw_text = "[State.CalcTaxCapacityBalance|0+=]"
							tooltip = "STATE_TAX_CAPACITY_DESC"
							parentanchor = vcenter
							elide = right
							visible = "[ObjectsEqual(Building.GetBuildingType, GetBuildingType('building_government_administration').Self)]"
						}

						textbox = {
							margin = { 5 0 }
							margin_right = 10
							size = { 75 25 }
							align = right|nobaseline
							datacontext = "[MapListOption.GetBuildingData.GetBuilding]"
							raw_text = "[Building.GetBuildingType.GetExpansionRevenueImpact(Building.Self, Building.GetState)|K+=]"
							tooltip = "[Building.GetBuildingType.GetExpansionRevenueImpactDesc(Building.Self, Building.GetState)]"
							parentanchor = vcenter
							elide = right
							visible = "[Not(ObjectsEqual(Building.GetBuildingType, GetBuildingType('building_government_administration').Self))]"
						} 
					}
				}
			}
		}
	}
}
